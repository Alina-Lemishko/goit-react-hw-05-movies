{"version":3,"file":"static/js/562.36686ae2.chunk.js","mappings":"wSAEaA,EAAUC,EAAAA,GAAAA,QAAH,uEAKPC,EAAOD,EAAAA,GAAAA,GAAH,4JASJE,EAAOF,EAAAA,GAAAA,GAAH,0OAWJG,EAAMH,EAAAA,GAAAA,IAAH,uGAOHI,EAAQJ,EAAAA,GAAAA,GAAH,sF,yLCalB,EA1CyB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MAClBC,EACND,EADMC,MAAOC,EACbF,EADaE,aAAcC,EAC3BH,EAD2BG,YAAaC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,OAAQC,EAC9DN,EAD8DM,SAG1DC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAAC,KAAD,YACE,mBAAQC,KAAK,SAASC,QANX,WAAO,IAAD,EACnBH,GAAiB,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUM,aAAV,eAAiBC,OAAQ,MAKhC,sBAGA,4BACE,0BACGb,EADH,KACU,gCAAQc,GAAAA,CAAOb,GAAcc,OAAO,QAApC,WAEV,gBACEC,IAAG,0CAAqCd,GACxCe,IAAKjB,EACLkB,MAAO,OAET,wCAA+B,GAAff,EAAhB,QACA,sCACA,0BAAOE,KACP,oCACA,8BAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAQe,KAAI,qBAAGC,QAAiBC,KAAK,YAE3C,kDACA,SAAC,KAAD,CAAMC,GAAG,OAAT,UACE,oCAEF,SAAC,KAAD,CAAMA,GAAG,UAAT,UACE,0CCpCKC,EAAU,mCAqBvB,EAnByB,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOzB,EAAP,KAAc0B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAASM,MAC5BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,cACnC,CAACV,KAGF,4BACE,SAAC,EAAD,CAAkB3B,MAAOA,KACzB,mBACA,SAAC,KAAD,S,6KCnBAwB,EAAU,mCAEHc,EAAsB,WACjC,OAAOC,IAAAA,IAAA,kEAC2Df,IAC/DO,MAAK,qBAAGC,SAGAF,EAAkB,SAAAU,GAC7B,OAAOD,IAAAA,IAAA,6CACiCC,EADjC,oBAC+ChB,EAD/C,qBAKIiB,EAAsB,SAAAC,GACjC,OAAOH,IAAAA,IAAA,4DAEkDf,EAFlD,yBAE0EkB,EAF1E,yBAIJX,MAAK,qBAAGC,SAGAW,EAAmB,SAAAH,GAC9B,OAAOD,IAAAA,IAAA,6CAEmCC,EAFnC,4BAEyDhB,EAFzD,2BAIJO,MAAK,qBAAGC,SAGAY,EAAmB,SAAAJ,GAC9B,OAAOD,IAAAA,IAAA,6CAEmCC,EAFnC,4BAEyDhB,EAFzD,2BAIJO,MAAK,qBAAGC","sources":["components/MoviesListHome/HomePage.styled.js","components/MovieDetailsView/MovieDetailsView.js","components/pages/MoviesDetailsPage.js","services/ApiFetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 10px;\n  padding-bottom: 20px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin-right: -32px;\n  margin-bottom: -32px;\n  margin-right: -16px;\n`;\n\nexport const Card = styled.li`\n  position: relative;\n  padding-bottom: 10px;\n  border-radius: 5px;\n  overflow: hidden;\n  transition: transform 0.5s linear;\n  width: calc(100% / 3 - 16px);\n  margin-right: 16px;\n  margin-bottom: 10px;\n`;\n\nexport const Img = styled.img`\n  width: 395px;\n  height: 574px;\n  overflow: hidden;\n  border-radius: 5px;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 5px;\n  font-size: 20px;\n  line-height: 1.2;\n`;\n","import { List } from 'components/MoviesListHome/HomePage.styled';\nimport moment from 'moment';\nimport { Link } from 'components/AppBar/AppBar.styled';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst MovieDetailsView = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, genres, overview } =\n    movie;\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const GoBack = () => {\n    navigate(location?.state?.from || '/');\n  };\n\n  return (\n    <List>\n      <button type=\"button\" onClick={GoBack}>\n        Go Back\n      </button>\n      <div>\n        <h2>\n          {title} <span>({moment(release_date).format('YYYY')})</span>\n        </h2>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n          width={250}\n        />\n        <p>User Score: {vote_average * 10}%</p>\n        <h3>Overview</h3>\n        <span>{overview}</span>\n        <h3>Genres</h3>\n        <p>{genres?.map(({ name }) => name).join(', ')}</p>\n      </div>\n      <h2>Addition information</h2>\n      <Link to=\"cast\">\n        <h3>Cast</h3>\n      </Link>\n      <Link to=\"reviews\">\n        <h3>Reviews</h3>\n      </Link>\n    </List>\n  );\n};\n\nexport default MovieDetailsView;\n","import { useEffect, useState } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { fetchMoviesById } from 'services/ApiFetch';\nimport MovieDetailsView from 'components/MovieDetailsView';\n\nexport const API_KEY = 'e7e97d56d25ec1e4b049a81d5db4fb3b';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesById(movieId)\n      .then(({ data }) => setMovie(data))\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  return (\n    <div>\n      <MovieDetailsView movie={movie} />\n      <br />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'e7e97d56d25ec1e4b049a81d5db4fb3b';\n\nexport const fetchTrendingMovies = () => {\n  return axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(({ data }) => data);\n};\n\nexport const fetchMoviesById = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const fetchMoviesBySearch = query => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&page=1&query=${query}&include_adult=false`\n    )\n    .then(({ data }) => data);\n};\n\nexport const fetchReviewsById = id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(({ data }) => data);\n};\n\nexport const fetchCreditsById = id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(({ data }) => data);\n};\n"],"names":["Section","styled","List","Card","Img","Title","movie","title","release_date","poster_path","vote_average","genres","overview","location","useLocation","navigate","useNavigate","type","onClick","state","from","moment","format","src","alt","width","map","name","join","to","API_KEY","useState","setMovie","movieId","useParams","useEffect","fetchMoviesById","then","data","catch","error","console","log","message","fetchTrendingMovies","axios","id","fetchMoviesBySearch","query","fetchReviewsById","fetchCreditsById"],"sourceRoot":""}