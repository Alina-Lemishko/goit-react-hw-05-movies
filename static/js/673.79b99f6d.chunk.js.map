{"version":3,"file":"static/js/673.79b99f6d.chunk.js","mappings":"2TAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8VAmBJE,EAAWF,EAAAA,GAAAA,IAAH,2DAKRG,EAAaH,EAAAA,GAAAA,IAAH,4DAKVI,EAAYJ,EAAAA,GAAAA,IAAH,+CAITK,EAAQL,EAAAA,GAAAA,GAAH,uHAOLM,EAAaN,EAAAA,GAAAA,EAAH,gLAUVO,EAAaP,EAAAA,GAAAA,GAAH,uKASVQ,EAAgBR,EAAAA,GAAAA,EAAH,oI,SCJ1B,EA7CyB,SAAC,GAAe,IAAbS,EAAY,EAAZA,MAClBC,EACND,EADMC,MAAOC,EACbF,EADaE,aAAcC,EAC3BH,EAD2BG,YAAaC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,OAAQC,EAC9DN,EAD8DM,SAG1DC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,4BACE,0BACE,mBAAQC,KAAK,SAASC,QAPb,WAAO,IAAD,EACnBH,GAAiB,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUM,aAAV,eAAiBC,OAAQ,MAM9B,wBAKF,UAACpB,EAAD,YACE,gBACEqB,IAAG,0CAAqCZ,GACxCa,IAAKf,EACLgB,MAAO,OAET,UAACtB,EAAD,YACE,UAACC,EAAD,WACGK,EADH,KACU,gCAAQiB,GAAAA,CAAOhB,GAAciB,OAAO,QAApC,WAEV,UAACtB,EAAD,0BAAwC,GAAfO,EAAzB,QACA,SAACN,EAAD,wBACA,SAACC,EAAD,UAAgBO,KAChB,SAACR,EAAD,sBACA,SAACD,EAAD,iBAAaQ,QAAb,IAAaA,OAAb,EAAaA,EAAQe,KAAI,qBAAGC,QAAiBC,KAAK,eAGtD,SAACzB,EAAD,oCACA,UAACJ,EAAD,YACE,SAACH,EAAD,CAAMiC,GAAG,OAAT,mBACA,SAACjC,EAAD,CAAMiC,GAAG,UAAT,4BC/CKC,EAAU,mCAqBvB,EAnByB,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOzB,EAAP,KAAc0B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAASM,MAC5BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,cACnC,CAACV,KAGF,4BACE,SAAC,EAAD,CAAkB3B,MAAOA,KACzB,mBACA,SAAC,KAAD,S,6KCnBAwB,EAAU,mCAEHc,EAAsB,WACjC,OAAOC,IAAAA,IAAA,kEAC2Df,IAC/DO,MAAK,qBAAGC,SAGAF,EAAkB,SAAAU,GAC7B,OAAOD,IAAAA,IAAA,6CACiCC,EADjC,oBAC+ChB,EAD/C,qBAKIiB,EAAsB,SAAAC,GACjC,OAAOH,IAAAA,IAAA,4DAEkDf,EAFlD,yBAE0EkB,EAF1E,yBAIJX,MAAK,qBAAGC,SAGAW,EAAmB,SAAAH,GAC9B,OAAOD,IAAAA,IAAA,6CAEmCC,EAFnC,4BAEyDhB,EAFzD,2BAIJO,MAAK,qBAAGC,SAGAY,EAAmB,SAAAJ,GAC9B,OAAOD,IAAAA,IAAA,6CAEmCC,EAFnC,4BAEyDhB,EAFzD,2BAIJO,MAAK,qBAAGC","sources":["components/MovieDetailsView/MovieDetailsView.styled.js","components/MovieDetailsView/MovieDetailsView.js","components/pages/MoviesDetailsPage.js","services/ApiFetch.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  margin-bottom: 10px;\n  text-align: center;\n  font-size: 18px;\n  border: 1px solid orangered;\n  min-width: 150px;\n  margin-right: 15px;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const LinkWrap = styled.div`\n  display: flex;\n  width: 150px;\n`;\n\nexport const DetailWrap = styled.div`\n  display: flex;\n  padding: 10px;\n`;\n\nexport const DescrWrap = styled.div`\n  padding: 10px 30px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 15px;\n  text-transform: uppercase;\n`;\n\nexport const AfterTitle = styled.p`\n  display: block;\n  text-align: center;\n  background-color: #eee;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 15px;\n`;\n\nexport const DescrTitle = styled.h3`\n  font-weight: 500;\n  font-size: 25px;\n  text-align: center;\n  border: 1px solid orangered;\n  border-radius: 4px;\n  margin-bottom: 15px;\n`;\n\nexport const OverviewTitle = styled.p`\n  display: block;\n  background-color: #eee;\n  padding: 20px;\n  font-size: 20px;\n  margin-bottom: 15px;\n`;\n","import moment from 'moment';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  AfterTitle,\n  DescrTitle,\n  DescrWrap,\n  DetailWrap,\n  Link,\n  LinkWrap,\n  OverviewTitle,\n  Title,\n} from './MovieDetailsView.styled';\n\nconst MovieDetailsView = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, genres, overview } =\n    movie;\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const GoBack = () => {\n    navigate(location?.state?.from || '/');\n  };\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={GoBack}>\n          Go Back\n        </button>\n      </div>\n\n      <DetailWrap>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={title}\n          width={300}\n        />\n        <DescrWrap>\n          <Title>\n            {title} <span>({moment(release_date).format('YYYY')})</span>\n          </Title>\n          <AfterTitle>User Score: {vote_average * 10}%</AfterTitle>\n          <DescrTitle>Overview</DescrTitle>\n          <OverviewTitle>{overview}</OverviewTitle>\n          <DescrTitle>Genres</DescrTitle>\n          <AfterTitle>{genres?.map(({ name }) => name).join(', ')}</AfterTitle>\n        </DescrWrap>\n      </DetailWrap>\n      <AfterTitle>Addition information</AfterTitle>\n      <LinkWrap>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </LinkWrap>\n    </div>\n  );\n};\n\nexport default MovieDetailsView;\n","import { useEffect, useState } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { fetchMoviesById } from 'services/ApiFetch';\nimport MovieDetailsView from 'components/MovieDetailsView';\n\nexport const API_KEY = 'e7e97d56d25ec1e4b049a81d5db4fb3b';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesById(movieId)\n      .then(({ data }) => setMovie(data))\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  return (\n    <div>\n      <MovieDetailsView movie={movie} />\n      <br />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'e7e97d56d25ec1e4b049a81d5db4fb3b';\n\nexport const fetchTrendingMovies = () => {\n  return axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(({ data }) => data);\n};\n\nexport const fetchMoviesById = id => {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const fetchMoviesBySearch = query => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&page=1&query=${query}&include_adult=false`\n    )\n    .then(({ data }) => data);\n};\n\nexport const fetchReviewsById = id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(({ data }) => data);\n};\n\nexport const fetchCreditsById = id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .then(({ data }) => data);\n};\n"],"names":["Link","styled","NavLink","LinkWrap","DetailWrap","DescrWrap","Title","AfterTitle","DescrTitle","OverviewTitle","movie","title","release_date","poster_path","vote_average","genres","overview","location","useLocation","navigate","useNavigate","type","onClick","state","from","src","alt","width","moment","format","map","name","join","to","API_KEY","useState","setMovie","movieId","useParams","useEffect","fetchMoviesById","then","data","catch","error","console","log","message","fetchTrendingMovies","axios","id","fetchMoviesBySearch","query","fetchReviewsById","fetchCreditsById"],"sourceRoot":""}